#map = affine_map<(d0) -> (d0)>
module attributes {torch.debug_module_name = "Vector_Add"} {
  ml_program.global private mutable @global_seed(dense<0> : tensor<i64>) : tensor<i64>
  func.func @forward(%arg0: tensor<1024xf64>, %arg1: tensor<1024xf64>) -> tensor<1024xf64> {
    %0 = tensor.empty() : tensor<1024xf64>
    %1 = linalg.generic {indexing_maps = [#map, #map, #map], iterator_types = ["parallel"]} ins(%arg0, %arg1 : tensor<1024xf64>, tensor<1024xf64>) outs(%0 : tensor<1024xf64>) {
    ^bb0(%in: f64, %in_0: f64, %out: f64):
      %2 = arith.addf %in, %in_0 : f64
      linalg.yield %2 : f64
    } -> tensor<1024xf64>
    return %1 : tensor<1024xf64>
  }
}
